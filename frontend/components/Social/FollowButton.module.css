.followButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-xs);
  border: 2px solid;
  border-radius: var(--radius-lg);
  font-family: inherit;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.15s ease-in-out;
  text-decoration: none;
  white-space: nowrap;
  position: relative;
  overflow: hidden;
}

.followButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
}

/* Size Variants */
.sizeSmall {
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: 12px;
  min-height: 32px;
  gap: 4px;
}

.sizeMedium {
  padding: var(--spacing-sm) var(--spacing-lg);
  font-size: 14px;
  min-height: 40px;
  gap: var(--spacing-xs);
}

.sizeLarge {
  padding: var(--spacing-md) var(--spacing-xl);
  font-size: 16px;
  min-height: 48px;
  gap: var(--spacing-sm);
}

/* Style Variants */
.variantPrimary {
  background: var(--purple-gradient);
  border-color: var(--primary-purple);
  color: white;
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.variantPrimary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(99, 102, 241, 0.4);
}

.variantOutline {
  background: transparent;
  border-color: var(--primary-purple);
  color: var(--primary-purple);
}

.variantOutline:hover {
  background: var(--purple-gradient);
  color: white;
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.variantMinimal {
  background: transparent;
  border-color: var(--border);
  color: var(--text-secondary);
  box-shadow: none;
}

.variantMinimal:hover {
  border-color: var(--primary-purple);
  color: var(--primary-purple);
  background: var(--purple-gradient-light);
}

/* Follow Status States */
.notFollowing.variantPrimary {
  background: var(--purple-gradient);
  border-color: var(--primary-purple);
  color: white;
}

.following.variantPrimary {
  background: var(--success);
  border-color: var(--success);
  color: white;
}

.following.variantPrimary:hover {
  background: var(--error);
  border-color: var(--error);
  transform: translateY(-1px);
}

.following.variantPrimary:hover .buttonText::after {
  content: ' (Click to unfollow)';
  font-size: 0.85em;
  opacity: 0.9;
}

.pending.variantPrimary {
  background: var(--warning);
  border-color: var(--warning);
  color: white;
}

.pending.variantPrimary:hover {
  background: var(--error);
  border-color: var(--error);
}

.pending.variantPrimary:hover .buttonText::after {
  content: ' (Click to cancel)';
  font-size: 0.85em;
  opacity: 0.9;
}

/* Outline variant status states */
.notFollowing.variantOutline {
  border-color: var(--primary-purple);
  color: var(--primary-purple);
}

.following.variantOutline {
  border-color: var(--success);
  color: var(--success);
  background: var(--success-light);
}

.following.variantOutline:hover {
  border-color: var(--error);
  color: var(--error);
  background: var(--error-light);
}

.pending.variantOutline {
  border-color: var(--warning);
  color: var(--warning);
  background: var(--warning-light);
}

.pending.variantOutline:hover {
  border-color: var(--error);
  color: var(--error);
  background: var(--error-light);
}

/* Minimal variant status states */
.following.variantMinimal {
  border-color: var(--success);
  color: var(--success);
}

.following.variantMinimal:hover {
  border-color: var(--error);
  color: var(--error);
  background: var(--error-light);
}

.pending.variantMinimal {
  border-color: var(--warning);
  color: var(--warning);
}

.pending.variantMinimal:hover {
  border-color: var(--error);
  color: var(--error);
  background: var(--error-light);
}

/* Error State */
.error {
  background: var(--error-light);
  border-color: var(--error);
  color: var(--error);
}

.error:hover {
  background: var(--error);
  color: white;
}

/* Button Text */
.buttonText {
  display: inline-block;
  position: relative;
}

/* Loading Animation */
.followButton i.fa-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Responsive Design */
@media (max-width: 768px) {
  .sizeMedium {
    padding: var(--spacing-xs) var(--spacing-md);
    font-size: 13px;
    min-height: 36px;
  }
  
  .sizeLarge {
    padding: var(--spacing-sm) var(--spacing-lg);
    font-size: 14px;
    min-height: 40px;
  }
  
  /* Hide text on very small screens, show only icon */
  .sizeSmall .buttonText {
    display: none;
  }
}

/* Accessibility */
.followButton:focus {
  outline: 2px solid var(--primary-purple);
  outline-offset: 2px;
}

.followButton:focus:not(:focus-visible) {
  outline: none;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .followButton {
    border-width: 3px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .followButton {
    transition: none;
  }
  
  .followButton:hover {
    transform: none;
  }
  
  .followButton i.fa-spinner {
    animation: none;
  }
}

/* Compact mode for lists */
.followButton.compact {
  min-width: 80px;
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: 12px;
  min-height: 28px;
}

.followButton.compact .buttonText {
  font-size: 11px;
}